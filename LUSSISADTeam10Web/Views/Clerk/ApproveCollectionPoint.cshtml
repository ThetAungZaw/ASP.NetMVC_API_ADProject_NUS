@model LUSSISADTeam10Web.Models.Clerk.ApproveCollectionPointViewModel
@{
    ViewBag.Title = "Collection Point";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="breadcrumbs">
    <div class="col-sm-4">
        <div class="page-header float-left">
            <div class="page-title">
                <h4>Collection Point</h4>
            </div>
        </div>
    </div>
    <div class="col-sm-8 hideinmobile">
        <div class="page-header float-right">
            <div class="page-title">
                <ol class="breadcrumb text-right">
                    <li><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
                    <li class="active">Collection Point</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<div class="content mt-3">
    <div class="animated fadeIn">


        <div class="card">

            <div class="card-body">
                <h5 class="text-sm-center text-info hideinmobile"> <i class="ti-location-pin fa-3x"></i><br /> Approve Collection Point </h5>
                <dl class="dl-horizontal"></dl>
                <div class="col-md-3"><h4><b>Department: </b></h4> </div>
                <div class="col-md-4"><h4>@Html.DisplayFor(model => model.DepName)</h4></div>
            </div><br />
            <div class="row">
                <div class="col-md-5 card mx-auto">
                    <div class="row p-2">
                        <h4><b>Previous Collection Point :&nbsp; </b></h4>
                        <h4>@Html.DisplayFor(model => model.OldCpName)</h4>
                    </div>
                    <div class="row p-2">
                        <div id="mapOld" style="width:100%; height:200px;"></div>
                    </div>
                </div>
                <div class="col-md-5 card mx-auto">
                    <div class="row p-2">
                        <h4><b>Requested Collection Point :&nbsp; </b></h4>
                        <h4>@Html.DisplayFor(model => model.CpName)</h4>
                    </div>
                    <div class="row p-2">
                        <div id="mapNew" style="width:100%; height:200px;"></div>
                    </div>
                </div>
            </div>
            <div class="card-text text-sm-center">
                <form asp-action="ApproveCollectionPoint" asp-controller="Clerk" method="post">
                    <div class="col-md-12">
                        <br />
                        <div class="form-check-inline form-check pull-left">
                            <label for="inline-radio1" class="form-check-label ">
                                <input type="hidden" name="CpID" asp-for="@Model.CpID" value="@Model.CpID" />
                                <input type="radio" id="inline-radio1" name="approve" asp-for="@Model.Approve" value="true" checked class="form-check-input"> Approve &nbsp;&nbsp;&nbsp;
                            </label>
                            <label for="inline-radio2" class="form-check-label ">
                                <input type="radio" id="inline-radio2" name="approve" asp-for="@Model.Approve" value="false" class="form-check-input"> Reject
                            </label>
                        </div>

                        <br /><br />
                        <div>
                            <input type="Submit" class="btn btn-outline-success pull-right btn-flat m-b-30 m-t-30" value="Confirm">

                            <br /><br />
                            <br /><br />

                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBIwToLtXThWaOyGkWZiXYfErtYykI8or0" type="text/javascript"></script>
    <script type="text/javascript">

        var approve = document.getElementById("inline-radio1");
        var checkedApprove = approve.checked;

        var mapcode;
        var loc = [];

        window.onload = mapLoad;
        function mapLoad() {
            loc.push([@ViewBag.OldLat, @ViewBag.OldLng]);
            loc.push([@ViewBag.NewLat, @ViewBag.NewLng]);
            initMap(loc[0][0], loc[0][1],
                loc[1][0], loc[1][1]);
        }

        function initMap(lat1, lng1, lat2, lng2) {
            mapcode = new google.maps.Geocoder();
            var lnt1 = new google.maps.LatLng(lat1, lng1);
            var lnt2 = new google.maps.LatLng(lat2, lng2);
            var marker1;
            var marker2;
            var diagChoice1 = {
                zoom: 15,
                center: lnt1,
                diagId: google.maps.MapTypeId.ROADMAP
            }
            var diagChoice2 = {
                zoom: 15,
                center: lnt2,
                diagId: google.maps.MapTypeId.ROADMAP
            }
            oldM = new google.maps.Map(document.getElementById('mapOld'), diagChoice1);
            newM = new google.maps.Map(document.getElementById('mapNew'), diagChoice2);

            var infowindow1 = new google.maps.InfoWindow();
            var infowindow2 = new google.maps.InfoWindow();

            mark(oldM, lnt1, "Previous <br/> Loaction", marker1, infowindow1);
            mark(newM, lnt2, "Requested <br/> Location", marker2, infowindow2);

            function mark(map, location, text, marker, iw) {
                marker = new google.maps.Marker({
                    map: map,
                    draggable: false,
                    position: location
                });
                marker.setTitle(text);
                infoWin(map, marker, text);
                marker.addListener('click', function () {
                    infoWin(map, marker, marker.getTitle(), iw);
                });
                function infoWin(MAP, MARKER, info, iWin) {
                    iWin = new google.maps.InfoWindow();
                    iWin.setContent(info);
                    iWin.open(MAP, MARKER);
                }
            }


        }
    </script>
}
